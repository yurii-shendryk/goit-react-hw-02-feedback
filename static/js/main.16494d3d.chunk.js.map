{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackButton/FeedbackButton.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Statistics/Statisrics.jsx","components/FeedbackButton/FeedbackButton.jsx","components/FeedbackOptions/FeedbackOptions.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","section__title","defaultProps","Notification","message","message__text","Statistics","good","neutral","bad","total","positivePercentage","statistics__list","statistics__item","FeedbackButton","feedbackName","onLeaveFeedback","feedback__item","feedback__button","type","data-feedback","onClick","FeedbackOptions","options","options__list","map","option","App","state","handleFeedback","target","console","dir","feedback","dataset","setState","prevState","countTotalFeedback","Object","values","reduce","feedbackValue","countPositiveFeedbackPercentage","totalFeedbacks","Math","round","this","feedbackNames","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16494d3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics__list\":\"Statistics_statistics__list__3v6e7\",\"statistics__item\":\"Statistics_statistics__item__27ZEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__item\":\"FeedbackButton_feedback__item__3txry\",\"feedback__button\":\"FeedbackButton_feedback__button__3YXMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1O6kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__title\":\"Section_section__title__1PNL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__text\":\"Notification_message__text__3JBkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options__list\":\"FeedbackOptions_options__list__1C1BI\"};","import styles from './Container.module.css';\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\nexport default Container;\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h1 className={styles.section__title}>{title}</h1>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.defaultProps = {\r\n  children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message__text}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    {!!total ? (\r\n      <ul className={styles.statistics__list}>\r\n        <li className={styles.statistics__item}>Good: {good}</li>\r\n        <li className={styles.statistics__item}>Neutral: {neutral}</li>\r\n        <li className={styles.statistics__item}>Bad: {bad}</li>\r\n        <li className={styles.statistics__item}>Total: {total}</li>\r\n        <li className={styles.statistics__item}>\r\n          Positive feedback: {positivePercentage}%\r\n        </li>\r\n      </ul>\r\n    ) : (\r\n      <Notification message=\"No feedback given\" />\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackButton.module.css';\r\n\r\nconst FeedbackButton = ({ feedbackName, onLeaveFeedback }) => (\r\n  <li className={styles.feedback__item}>\r\n    <button\r\n      className={styles.feedback__button}\r\n      type=\"button\"\r\n      data-feedback={feedbackName}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {feedbackName}\r\n    </button>\r\n  </li>\r\n);\r\n\r\nFeedbackButton.propTypes = {\r\n  feedbackName: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackButton;\r\n","import PropTypes from 'prop-types';\r\nimport FeedbackButton from '../FeedbackButton';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul className={styles.options__list}>\r\n    {options.map(option => {\r\n      return (\r\n        <FeedbackButton\r\n          feedbackName={option}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n          key={option}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(String).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import { Component } from 'react';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleFeedback = ({ target }) => {\n    console.dir(target);\n    const { feedback } = target.dataset;\n    this.setState(prevState => {\n      return {\n        [feedback]: prevState[feedback] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const feedbackValues = Object.values(this.state);\n    return feedbackValues.reduce(\n      (total, feedbackValue) => (total += feedbackValue),\n      0,\n    );\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedbacks = this.countTotalFeedback();\n    const positiveFeedbackPercentage = totalFeedbacks\n      ? Math.round((good / totalFeedbacks) * 100)\n      : totalFeedbacks;\n    return positiveFeedbackPercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const feedbackNames = Object.keys(this.state);\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={feedbackNames}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './reset.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}